[{"D:\\Files\\Codes\\React\\rider-tracker\\src\\index.js":"1","D:\\Files\\Codes\\React\\rider-tracker\\src\\App.js":"2","D:\\Files\\Codes\\React\\rider-tracker\\src\\pages\\InteractiveMap.js":"3","D:\\Files\\Codes\\React\\rider-tracker\\src\\pages\\Home.js":"4","D:\\Files\\Codes\\React\\rider-tracker\\src\\pages\\Riders.js":"5","D:\\Files\\Codes\\React\\rider-tracker\\src\\pages\\Updates.js":"6","D:\\Files\\Codes\\React\\rider-tracker\\src\\pages\\Login.js":"7","D:\\Files\\Codes\\React\\rider-tracker\\src\\components\\Navbar.js":"8","D:\\Files\\Codes\\React\\rider-tracker\\src\\components\\Footer.js":"9","D:\\Files\\Codes\\React\\rider-tracker\\src\\Auth.js":"10","D:\\Files\\Codes\\React\\rider-tracker\\src\\base.js":"11","D:\\Files\\Codes\\React\\rider-tracker\\src\\pages\\Testing.js":"12","D:\\Files\\Codes\\React\\rider-tracker\\src\\hooks\\useFireStoreCovid.js":"13","D:\\Files\\Codes\\React\\rider-tracker\\src\\hooks\\useFireStoreRiders.js":"14","D:\\Files\\Codes\\React\\rider-tracker\\src\\hooks\\useFireStoreDeliveries.js":"15","D:\\Files\\Codes\\React\\rider-tracker\\src\\hooks\\useFireStoreRiderID.js":"16","D:\\Files\\Codes\\React\\rider-tracker\\src\\pages\\TestMap.js":"17","D:\\Files\\Codes\\React\\rider-tracker\\src\\pages\\Geolocate.js":"18","D:\\Files\\Codes\\React\\rider-tracker\\src\\components\\PrivateRoute.js":"19"},{"size":215,"mtime":1611332198839,"results":"20","hashOfConfig":"21"},{"size":1801,"mtime":1614339902350,"results":"22","hashOfConfig":"21"},{"size":1684,"mtime":1612711803142,"results":"23","hashOfConfig":"21"},{"size":3562,"mtime":1615020353922,"results":"24","hashOfConfig":"21"},{"size":5537,"mtime":1615020037764,"results":"25","hashOfConfig":"21"},{"size":992,"mtime":1612975115456,"results":"26","hashOfConfig":"21"},{"size":2654,"mtime":1615019943042,"results":"27","hashOfConfig":"21"},{"size":2223,"mtime":1614274239890,"results":"28","hashOfConfig":"21"},{"size":216,"mtime":1611342457989,"results":"29","hashOfConfig":"21"},{"size":892,"mtime":1614273859036,"results":"30","hashOfConfig":"21"},{"size":674,"mtime":1612710032362,"results":"31","hashOfConfig":"21"},{"size":10390,"mtime":1615020415512,"results":"32","hashOfConfig":"21"},{"size":429,"mtime":1612710381350,"results":"33","hashOfConfig":"21"},{"size":792,"mtime":1611798539118,"results":"34","hashOfConfig":"21"},{"size":1313,"mtime":1614341900520,"results":"35","hashOfConfig":"21"},{"size":845,"mtime":1614342136336,"results":"36","hashOfConfig":"21"},{"size":4428,"mtime":1612974234207,"results":"37","hashOfConfig":"21"},{"size":1543,"mtime":1611631335184,"results":"38","hashOfConfig":"21"},{"size":611,"mtime":1614339749401,"results":"39","hashOfConfig":"21"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},"qqh0ty",{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"51","usedDeprecatedRules":"42"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"66","usedDeprecatedRules":"42"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"75"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"82","usedDeprecatedRules":"42"},"D:\\Files\\Codes\\React\\rider-tracker\\src\\index.js",[],["83","84"],"D:\\Files\\Codes\\React\\rider-tracker\\src\\App.js",[],"D:\\Files\\Codes\\React\\rider-tracker\\src\\pages\\InteractiveMap.js",[],"D:\\Files\\Codes\\React\\rider-tracker\\src\\pages\\Home.js",[],"D:\\Files\\Codes\\React\\rider-tracker\\src\\pages\\Riders.js",["85","86"],"import React, { useState, useEffect } from \"react\";\r\nimport useFireStoreDeliveries from \"../hooks/useFireStoreDeliveries\";\r\nimport useFireStoreRiders from \"../hooks/useFireStoreRiders\";\r\nimport useFireStoreRiderID from \"../hooks/useFireStoreRiderID\";\r\nimport { AccountCircle, Cancel, Warning } from \"@material-ui/icons\";\r\nimport \"../styles/Riders.css\";\r\n\r\nfunction Riders() {\r\n  const { online, offline } = useFireStoreRiders();\r\n  const [currentRider, setCurrentRider] = useState(null);\r\n\r\n  return (\r\n    <div className=\"rider container\">\r\n      {currentRider && (\r\n        <Modal riderID={currentRider} setCurrentRider={setCurrentRider} />\r\n      )}\r\n      <h2>Rider List</h2>\r\n\r\n      <div className=\"rider-list-title\">\r\n        <p>Name</p>\r\n        <p>Risk Level</p>\r\n        <p>Contact Number</p>\r\n        <p>Address</p>\r\n      </div>\r\n\r\n      <h4>\r\n        Online <small>ðŸŸ¢</small>\r\n      </h4>\r\n      {online &&\r\n        online.map((item, index) => (\r\n          <Item\r\n            key={item.id}\r\n            riderID={item.id}\r\n            setCurrentRider={setCurrentRider}\r\n          />\r\n        ))}\r\n\r\n      <h4>\r\n        Offline <small>ðŸ”´</small>\r\n      </h4>\r\n      {offline &&\r\n        offline.map((item) => (\r\n          <Item\r\n            key={item.id}\r\n            riderID={item.id}\r\n            setCurrentRider={setCurrentRider}\r\n          />\r\n        ))}\r\n    </div>\r\n  );\r\n}\r\n\r\n// RIDERS BASIC INFO\r\nfunction Item({ riderID, setCurrentRider }) {\r\n  const { rider, highestRisk } = useFireStoreRiderID(riderID);\r\n\r\n  const list = [\r\n    rider.name ?? \"N/A\",\r\n    highestRisk + \"%\" ?? \"N/A\",\r\n    rider.contactNumber ?? \"N/A\",\r\n    rider.address ?? \"N/A\",\r\n  ];\r\n\r\n  return (\r\n    <div\r\n      className={rider.averageRiskLevel > 50 ? \"rider-item-red\" : \"rider-item\"}\r\n      onClick={() => setCurrentRider(riderID)}\r\n    >\r\n      {rider && list.map((item, index) => <p key={\"item\" + index}>{item}</p>)}\r\n    </div>\r\n  );\r\n}\r\n\r\n// POP UP THAT SHOWS RIDER DELIVERIES\r\nfunction Modal({ riderID, setCurrentRider }) {\r\n  const { deliveries } = useFireStoreDeliveries(riderID);\r\n  const { rider, highestRisk } = useFireStoreRiderID(riderID);\r\n  const colors = [\"#2E7F18\", \"#675E24\", \"#8D472B\", \"#B13433\", \"#FF0000\"];\r\n  const [currColor, setCurrColor] = useState();\r\n\r\n  useEffect(() => {\r\n    if (rider) {\r\n      if (rider.averageRiskLevel < 20) setCurrColor(colors[0]);\r\n      else if (rider.averageRiskLevel < 40) setCurrColor(colors[1]);\r\n      else if (rider.averageRiskLevel < 60) setCurrColor(colors[2]);\r\n      else if (rider.averageRiskLevel < 80) setCurrColor(colors[3]);\r\n      else setCurrColor(colors[4]);\r\n    }\r\n  }, [rider]);\r\n\r\n  return (\r\n    <div className=\"rider-modal container\">\r\n      <div className=\"rider-modal-wrapper\">\r\n        <div\r\n          className=\"rider-modal-close\"\r\n          onClick={() => setCurrentRider(null)}\r\n        >\r\n          <Cancel fontSize=\"inherit\" />\r\n        </div>\r\n        <div className=\"rider-modal-profile\">\r\n          <div className=\"rider-modal-profile-item\">\r\n            <AccountCircle style={{ fontSize: \"10rem\", color: \"#04537C\" }} />\r\n            <h2>{rider.name}</h2>\r\n            <h3>{rider.licenseNo}</h3>\r\n          </div>\r\n\r\n          <div className=\"rider-modal-profile-item\">\r\n            <h1 className=\"rider-risk-level\">{highestRisk}%</h1>\r\n            <div className=\"rcs\">\r\n              <Warning style={{ fontSize: \"2rem\" }} />\r\n              &nbsp;&nbsp;\r\n              <p>Rider's Current Risk %</p>\r\n            </div>\r\n\r\n            <div className=\"rcs-bar\">\r\n              <div className=\"rcs-bar-container\">\r\n                <div\r\n                  className=\"rcs-bar-percentage\"\r\n                  style={{\r\n                    width: `${100 - highestRisk}%`,\r\n                    backgroundColor: \"#F2F2F2\",\r\n                  }}\r\n                />\r\n              </div>\r\n            </div>\r\n\r\n            <div className=\"rcs-levels\">\r\n              <p>0</p>\r\n              <p style={{ marginRight: \"-1.5rem\" }}>50</p>\r\n              <p>100</p>\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"rider-modal-deliveries\">\r\n          <h2>Delivery History on Confirmed Cases</h2>\r\n          <div className=\"rmd-title\">\r\n            <p>Address</p>\r\n            <p>Delivery Time</p>\r\n            <p>Duration</p>\r\n            <p>Risk Level</p>\r\n            <p>Percentage</p>\r\n          </div>\r\n\r\n          <div className=\"rider-divider\" />\r\n\r\n          {deliveries &&\r\n            deliveries.map((item, index) => (\r\n              <DeliveryItem key={\"del\" + index} delivery={item} />\r\n            ))}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nfunction DeliveryItem({ delivery }) {\r\n  const timeEnd = new Date(delivery.timeEnd.toDate());\r\n\r\n  function getTime() {\r\n    var hours = timeEnd.getHours();\r\n    var minutes = timeEnd.getMinutes();\r\n    var seconds = timeEnd.getSeconds();\r\n    var mid = \"AM\";\r\n\r\n    if (hours === 0) hours = 12;\r\n    else if (hours > 12) {\r\n      hours = hours % 12;\r\n      mid = \"PM\";\r\n    }\r\n    minutes = minutes < 10 ? \"0\" + minutes : minutes;\r\n    seconds = seconds < 10 ? \"0\" + seconds : seconds;\r\n    return hours + \":\" + minutes + \":\" + seconds + mid;\r\n  }\r\n\r\n  return (\r\n    <div className=\"rmd-item\">\r\n      <p>{delivery.address ?? \"N/A\"}</p>\r\n      <p>{getTime() ?? \"N/A\"}</p>\r\n      <p>{delivery.duration ?? \"N/A\"}</p>\r\n      <p>{delivery.riskLevel ?? \"N/A\"} </p>\r\n      <p>{delivery.riskPercentage + \"%\" ?? \"N/A\"} </p>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Riders;\r\n","D:\\Files\\Codes\\React\\rider-tracker\\src\\pages\\Updates.js",[],"D:\\Files\\Codes\\React\\rider-tracker\\src\\pages\\Login.js",[],"D:\\Files\\Codes\\React\\rider-tracker\\src\\components\\Navbar.js",[],"D:\\Files\\Codes\\React\\rider-tracker\\src\\components\\Footer.js",[],"D:\\Files\\Codes\\React\\rider-tracker\\src\\Auth.js",[],"D:\\Files\\Codes\\React\\rider-tracker\\src\\base.js",[],"D:\\Files\\Codes\\React\\rider-tracker\\src\\pages\\Testing.js",["87","88","89","90","91","92","93","94"],"import React, { useState, useEffect, useContext } from \"react\";\r\nimport \"../styles/Testing.css\";\r\nimport { auth, db, ts } from \"../base\";\r\nimport Geocode from \"react-geocode\";\r\nimport PlayArrowIcon from \"@material-ui/icons/PlayArrow\";\r\nimport StopIcon from \"@material-ui/icons/Stop\";\r\nimport useFireStoreCovid from \"../hooks/useFireStoreCovid\";\r\nimport { AuthContext } from \"../Auth\";\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nfunction Testing() {\r\n  Geocode.setApiKey(\"AIzaSyCOW0rwexUSAqaDFHyPNSybph7rbrlriQ8\");\r\n  const history = useHistory();\r\n  const { currentUser } = useContext(AuthContext);\r\n  const [address, setAddress] = useState();\r\n  const [loc, setLoc] = useState();\r\n  const [city, setCity] = useState();\r\n  const [email, setEmail] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const [withinProximity, setWithinProximity] = useState(false);\r\n  const [playing, setPlaying] = useState(false);\r\n  const [cases, setCases] = useState();\r\n  const [cityCases, setCityCases] = useState(0);\r\n  const { docs } = useFireStoreCovid();\r\n  const [loading, setLoading] = useState(false);\r\n\r\n  const NCRCities = [\r\n    \"Caloocan\",\r\n    \"Las PiÃ±as\",\r\n    \"Makati\",\r\n    \"Malabon\",\r\n    \"Mandaluyong\",\r\n    \"Marikina\",\r\n    \"Muntinlupa\",\r\n    \"Navotas\",\r\n    \"ParaÃ±aque\",\r\n    \"Pasay\",\r\n    \"Pasig\",\r\n    \"Pateros\",\r\n    \"Quezon\",\r\n    \"San Juan\",\r\n    \"Taguig\",\r\n    \"Valenzuela\",\r\n    \"Manila\",\r\n  ];\r\n\r\n  const authenticate = async () => {\r\n    await auth.signInWithEmailAndPassword(email, password).then().catch(alert);\r\n  };\r\n\r\n  // GET ADDRRESS FROM LAT LONG OF DEVICE\r\n  const getLoc = async (lat, lng) => {\r\n    setLoc({\r\n      lat,\r\n      lng,\r\n    });\r\n    let res = await Geocode.fromLatLng(lat, lng);\r\n    let index;\r\n    let tempAddr = res.results[0].formatted_address;\r\n    setAddress(tempAddr);\r\n    tempAddr = tempAddr.toUpperCase();\r\n\r\n    for (let i = 0; i < NCRCities.length; i++) {\r\n      if (tempAddr.includes(NCRCities[i].toUpperCase())) {\r\n        index = i;\r\n        break;\r\n      }\r\n    }\r\n    if (index) {\r\n      setCity(NCRCities[index]);\r\n    } else setCity(\"Not in NCR\");\r\n  };\r\n\r\n  // GET ARRAY OF CITY CASES FROM DATABASE\r\n  const getCases = (c) => {\r\n    db.collection(\"household\")\r\n      .where(\"city\", \"==\", city)\r\n      .onSnapshot((snapshot) => {\r\n        setCases(snapshot.docs.map((doc) => ({ ...doc.data(), id: doc.id })));\r\n      });\r\n  };\r\n\r\n  useEffect(() => {\r\n    // CHECK CITIES CASES IF WITHIN RIDERS PROXIMITY\r\n    if (cases) {\r\n      var near = false;\r\n      for (let i = 0; i < cases.length; i++) {\r\n        let caseLoc = { lat: cases[i].latitude, lng: cases[i].longitude };\r\n        if (arePointsNear(caseLoc, loc, 0.02)) {\r\n          near = true;\r\n          break;\r\n        }\r\n      }\r\n\r\n      setWithinProximity(near);\r\n    }\r\n  }, [cases, loc, withinProximity]);\r\n\r\n  useEffect(() => {\r\n    // SET RIDER LAT LONG IN DATABASE WHEN DEVICE LOCATION CHANGES\r\n    if (currentUser[0] && loc) {\r\n      db.collection(\"riders\").doc(currentUser[0].uid).update({\r\n        latitude: loc.lat,\r\n        longitude: loc.lng,\r\n      });\r\n    }\r\n\r\n    // GET CASES OF CURRECT CITY FROM DATABASE\r\n    if (city && city !== \"Not in NCR\") {\r\n      getCases(city);\r\n      if (docs) {\r\n        for (let i = 0; i < docs.length; i++) {\r\n          if (docs[i].name === city) {\r\n            setCityCases(docs[i].activeCases);\r\n            break;\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }, [currentUser[0], loc, city, docs]);\r\n\r\n  // WATCH DEVICE LAT LONG\r\n  useEffect(() => {\r\n    if (navigator.geolocation) {\r\n      navigator.geolocation.watchPosition(function (position) {\r\n        getLoc(position.coords.latitude, position.coords.longitude);\r\n      });\r\n    } else {\r\n      alert(\"no navigator.geolocation\");\r\n    }\r\n  }, []);\r\n\r\n  // END DELIVERY BUTTON\r\n  const endDelivery = async () => {\r\n    setLoading(true);\r\n    const startTime = new Date();\r\n    let areaRisk = (cityCases / 2000) * 100;\r\n\r\n    let riderRisk = 0;\r\n    let duration = \"00:00\";\r\n    if (withinProximity) {\r\n      duration = document.getElementById(\"timer-display\").innerHTML;\r\n      let a = duration.split(\":\").map((e) => parseInt(e));\r\n      let time = a[0] * 60 + a[1];\r\n      riderRisk = (time / (16 * 60)) * 100;\r\n    }\r\n\r\n    let riskPercentage = areaRisk * 0.2 + riderRisk * 0.8;\r\n    riskPercentage = parseFloat(riskPercentage.toFixed(2));\r\n    let riskLevel;\r\n    if (riskPercentage <= 25) riskLevel = \"Low Risk\";\r\n    else if (riskPercentage >= 26 && riskPercentage <= 50)\r\n      riskLevel = \"Moderate Risk\";\r\n    else if (riskPercentage >= 51 && riskPercentage <= 75)\r\n      riskLevel = \"High Risk\";\r\n    else if (riskPercentage >= 76) riskLevel = \"Critical Risk\";\r\n\r\n    let data = {\r\n      address,\r\n      duration,\r\n      riskLevel,\r\n      riskPercentage,\r\n      timeEnd: ts.fromDate(new Date()),\r\n    };\r\n\r\n    await db\r\n      .collection(\"riders\")\r\n      .doc(currentUser[0].uid)\r\n      .collection(\"deliveries\")\r\n      .add(data);\r\n\r\n    const endTime = new Date();\r\n\r\n    const millis = Math.abs(startTime - endTime);\r\n    console.log({ duration: millis });\r\n    setLoading(false);\r\n  };\r\n\r\n  const [loggedIn, setLoggedIn] = useState(false);\r\n  useEffect(() => {\r\n    if (!currentUser[0]) {\r\n      setLoggedIn(false);\r\n    } else {\r\n      setLoggedIn(true);\r\n    }\r\n  }, [currentUser[0]]);\r\n\r\n  return (\r\n    <div>\r\n      {loggedIn && currentUser[0] ? (\r\n        <div className=\"testing-container container\">\r\n          <input\r\n            type=\"submit\"\r\n            value=\"Logout\"\r\n            onClick={async () => {\r\n              await db\r\n                .collection(\"riders\")\r\n                .doc(currentUser[0].uid)\r\n                .set({ online: false }, { merge: true });\r\n              await auth.signOut();\r\n              history.replace(\"/login\");\r\n            }}\r\n          />\r\n          <br />\r\n          <br />\r\n          <p>\r\n            Email: <br />\r\n            <strong>{currentUser[0].email}</strong>\r\n          </p>\r\n          <br />\r\n          <p>\r\n            Current City: <br />\r\n            <strong>\r\n              {city ? city : \"getting location...\"} <br />\r\n            </strong>\r\n            Latitude: {loc && loc.lat} <br />\r\n            Longitude: {loc && loc.lng} <br /> <br />\r\n            Active Cases: {cityCases}\r\n          </p>\r\n          <div className=\"testing-container-section\">\r\n            {withinProximity ? (\r\n              <>\r\n                <p className=\"testing-warning\">\r\n                  <strong>WARNING! </strong>\r\n                  You are within the proximity of a Covid Patient. Please Start\r\n                  your timer accordingly.\r\n                </p>\r\n                <p className=\"testing-timer\" id=\"timer-display\">\r\n                  00:00\r\n                </p>\r\n                <div\r\n                  className=\"testing-timer-btn\"\r\n                  onClick={() => {\r\n                    startStop();\r\n                    setPlaying(!playing);\r\n                  }}\r\n                >\r\n                  {!playing ? (\r\n                    <>\r\n                      <PlayArrowIcon fontSize=\"large\" />\r\n                      <p>Start</p>\r\n                    </>\r\n                  ) : (\r\n                    <>\r\n                      <StopIcon fontSize=\"large\" />\r\n                      <p>Stop</p>\r\n                    </>\r\n                  )}\r\n                </div>\r\n                <p\r\n                  className=\"testing-resetBtn\"\r\n                  style={{ marginTop: \"10px\" }}\r\n                  onClick={() => {\r\n                    reset();\r\n                    setPlaying(false);\r\n                  }}\r\n                >\r\n                  Reset\r\n                </p>\r\n              </>\r\n            ) : (\r\n              <p className=\"testing-warning\">\r\n                No covid Cases within 20m Proximity.\r\n              </p>\r\n            )}\r\n\r\n            <div\r\n              className={\r\n                city !== \"Not in NCR\" || loading\r\n                  ? \"testing-end-button\"\r\n                  : \"testing-end-button-disabled\"\r\n              }\r\n              onClick={() => {\r\n                if (city !== \"Not in NCR\") {\r\n                  endDelivery();\r\n                }\r\n              }}\r\n            >\r\n              <p>{loading ? \"Loading...\" : \"End Delivery\"}</p>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      ) : (\r\n        <div\r\n          style={{\r\n            display: \"flex\",\r\n            height: \"100vh\",\r\n            alignItems: \"center\",\r\n            justifyContent: \"center\",\r\n          }}\r\n        >\r\n          <a href=\"/login\">Login</a>\r\n          &nbsp; to continue\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nfunction arePointsNear(checkPoint, centerPoint, km) {\r\n  var ky = 40000 / 360;\r\n  var kx = Math.cos((Math.PI * centerPoint.lat) / 180.0) * ky;\r\n  var dx = Math.abs(centerPoint.lng - checkPoint.lng) * kx;\r\n  var dy = Math.abs(centerPoint.lat - checkPoint.lat) * ky;\r\n  return Math.sqrt(dx * dx + dy * dy) <= km;\r\n}\r\n\r\n//////////////////////////////////////////////////////////////////////////\r\nlet seconds = 0;\r\nlet minutes = 0;\r\n\r\nlet displaySeconds = 0;\r\nlet displayMinutes = 0;\r\n\r\nlet interval = null;\r\n\r\nlet status = \"stopped\";\r\n\r\n// variable to set delay\r\nconst delayTime = 1000;\r\n\r\nfunction stopWatch() {\r\n  seconds++;\r\n\r\n  //Logic to determine when to increment next value\r\n  if (seconds / 60 === 1) {\r\n    seconds = 0;\r\n    minutes++;\r\n\r\n    if (minutes / 60 === 1) {\r\n      minutes = 0;\r\n    }\r\n  }\r\n\r\n  //If seconds/minutes/hours are only one digit, add a leading 0 to the value\r\n  if (seconds < 10) {\r\n    displaySeconds = \"0\" + seconds.toString();\r\n  } else {\r\n    displaySeconds = seconds;\r\n  }\r\n\r\n  if (minutes < 10) {\r\n    displayMinutes = \"0\" + minutes.toString();\r\n  } else {\r\n    displayMinutes = minutes;\r\n  }\r\n\r\n  //Display updated time values to user\r\n  document.getElementById(\"timer-display\").innerHTML =\r\n    displayMinutes + \":\" + displaySeconds;\r\n}\r\n\r\nfunction startStop() {\r\n  if (status === \"stopped\") {\r\n    interval = window.setInterval(stopWatch, delayTime);\r\n    status = \"started\";\r\n  } else {\r\n    window.clearInterval(interval);\r\n    status = \"stopped\";\r\n  }\r\n}\r\n\r\nfunction reset() {\r\n  window.clearInterval(interval);\r\n  status = \"stopped\";\r\n  seconds = 0;\r\n  minutes = 0;\r\n  document.getElementById(\"timer-display\").innerHTML = \"00:00\";\r\n}\r\n\r\nexport default Testing;\r\n","D:\\Files\\Codes\\React\\rider-tracker\\src\\hooks\\useFireStoreCovid.js",[],"D:\\Files\\Codes\\React\\rider-tracker\\src\\hooks\\useFireStoreRiders.js",[],"D:\\Files\\Codes\\React\\rider-tracker\\src\\hooks\\useFireStoreDeliveries.js",[],"D:\\Files\\Codes\\React\\rider-tracker\\src\\hooks\\useFireStoreRiderID.js",[],["95","96"],"D:\\Files\\Codes\\React\\rider-tracker\\src\\pages\\TestMap.js",[],"D:\\Files\\Codes\\React\\rider-tracker\\src\\pages\\Geolocate.js",[],"D:\\Files\\Codes\\React\\rider-tracker\\src\\components\\PrivateRoute.js",["97"],"import React, { useContext, useEffect, useState } from \"react\";\r\nimport { AuthContext } from \"../Auth\";\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nfunction PrivateRoute({ children }) {\r\n  const { isAdmin } = useContext(AuthContext);\r\n  const history = useHistory();\r\n  const [authenticated, setAuthenticated] = useState(false);\r\n\r\n  useEffect(() => {\r\n    if (!isAdmin) {\r\n      setAuthenticated(false);\r\n      history.replace(\"/login\");\r\n    } else {\r\n      setAuthenticated(true);\r\n    }\r\n  }, [isAdmin]);\r\n\r\n  return authenticated ? children : <div>loading</div>;\r\n}\r\n\r\nexport default PrivateRoute;\r\n",{"ruleId":"98","replacedBy":"99"},{"ruleId":"100","replacedBy":"101"},{"ruleId":"102","severity":1,"message":"103","line":79,"column":10,"nodeType":"104","messageId":"105","endLine":79,"endColumn":19},{"ruleId":"106","severity":1,"message":"107","line":89,"column":6,"nodeType":"108","endLine":89,"endColumn":13,"suggestions":"109"},{"ruleId":"102","severity":1,"message":"110","line":18,"column":17,"nodeType":"104","messageId":"105","endLine":18,"endColumn":25},{"ruleId":"102","severity":1,"message":"111","line":19,"column":20,"nodeType":"104","messageId":"105","endLine":19,"endColumn":31},{"ruleId":"102","severity":1,"message":"112","line":47,"column":9,"nodeType":"104","messageId":"105","endLine":47,"endColumn":21},{"ruleId":"106","severity":1,"message":"113","line":120,"column":6,"nodeType":"108","endLine":120,"endColumn":39,"suggestions":"114"},{"ruleId":"106","severity":1,"message":"115","line":120,"column":7,"nodeType":"116","endLine":120,"endColumn":21},{"ruleId":"106","severity":1,"message":"117","line":131,"column":6,"nodeType":"108","endLine":131,"endColumn":8,"suggestions":"118"},{"ruleId":"106","severity":1,"message":"119","line":186,"column":6,"nodeType":"108","endLine":186,"endColumn":22,"suggestions":"120"},{"ruleId":"106","severity":1,"message":"115","line":186,"column":7,"nodeType":"116","endLine":186,"endColumn":21},{"ruleId":"98","replacedBy":"121"},{"ruleId":"100","replacedBy":"122"},{"ruleId":"106","severity":1,"message":"123","line":17,"column":6,"nodeType":"108","endLine":17,"endColumn":15,"suggestions":"124"},"no-native-reassign",["125"],"no-negated-in-lhs",["126"],"no-unused-vars","'currColor' is assigned a value but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'colors'. Either include it or remove the dependency array.","ArrayExpression",["127"],"'setEmail' is assigned a value but never used.","'setPassword' is assigned a value but never used.","'authenticate' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'currentUser' and 'getCases'. Either include them or remove the dependency array.",["128"],"React Hook useEffect has a complex expression in the dependency array. Extract it to a separate variable so it can be statically checked.","MemberExpression","React Hook useEffect has a missing dependency: 'getLoc'. Either include it or remove the dependency array.",["129"],"React Hook useEffect has a missing dependency: 'currentUser'. Either include it or remove the dependency array.",["130"],["125"],["126"],"React Hook useEffect has a missing dependency: 'history'. Either include it or remove the dependency array.",["131"],"no-global-assign","no-unsafe-negation",{"desc":"132","fix":"133"},{"desc":"134","fix":"135"},{"desc":"136","fix":"137"},{"desc":"138","fix":"139"},{"desc":"140","fix":"141"},"Update the dependencies array to be: [colors, rider]",{"range":"142","text":"143"},"Update the dependencies array to be: [loc, city, docs, currentUser, getCases]",{"range":"144","text":"145"},"Update the dependencies array to be: [getLoc]",{"range":"146","text":"147"},"Update the dependencies array to be: [currentUser]",{"range":"148","text":"149"},"Update the dependencies array to be: [history, isAdmin]",{"range":"150","text":"151"},[2639,2646],"[colors, rider]",[3444,3477],"[loc, city, docs, currentUser, getCases]",[3780,3782],"[getLoc]",[5319,5335],"[currentUser]",[504,513],"[history, isAdmin]"]